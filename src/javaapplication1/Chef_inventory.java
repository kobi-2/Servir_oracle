/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Font;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JFrame;

/**
 *
 * @author shehr
 */
public class Chef_inventory extends javax.swing.JFrame {

    /**
     * Creates new form Chef_inventory
     */
    CallableStatement callstate;
    public Chef_inventory() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        fillTable();
    }

    public Connection OracleConnection() {
        Connection conn;
        try {
            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "shehreen", "oliveoil1000");
//            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:morcl", "shehreen", "oliveoil1000");
            return conn;
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "oracle Connection Failed...");
            return null;
            //OracleConnection();
            
            //try{
              //  conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "shehreen", "oliveoil1000");
//            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:morcl", "shehreen", "oliveoil1000");
                //return conn;
            //} catch(HeadlessException | SQLException ee){
              //  JOptionPane.showMessageDialog(null, "oracle Connection Failed...");
               // return null;
            //}
           
        }
    }

    //getting all the column values from a table (all rows)
    public ArrayList<InventoryBean> retrieveData() {
        ArrayList<InventoryBean> al = new ArrayList<InventoryBean>();
        try {
            Connection conn = OracleConnection();
            String qry = "select * from inventory";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(qry);

            while (rs.next()) {
                InventoryBean inventory = new InventoryBean(rs.getInt(1), rs.getString("name"), rs.getInt(3), rs.getInt(4));
                al.add(inventory);
            }
            rs.close();
            st.close();
            conn.close();

        } catch (SQLException e) {
            System.out.println(e);
        }
        return al;

    }
    
    //showing data for a particular index id (single row)
    public void showItemToFields(int index) {
        textfield_id.setText(Integer.toString(retrieveData().get(index).getId()));
        textfield_name.setText(retrieveData().get(index).getName());
    }

    public void fillTable() {
        ArrayList<InventoryBean> al = null;
        al = retrieveData();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Empty/clear the table

        for (InventoryBean inventory : al) {
            Object row[] = {inventory.getId(), inventory.getName(), inventory.getAmount(), inventory.getPrice()};
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textfield_name = new javax.swing.JTextField();
        textfield_amount = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        textfieldSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        chef_interface = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textfield_id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(2055, 1138));
        jPanel1.setMinimumSize(new java.awt.Dimension(2055, 1138));
        jPanel1.setPreferredSize(new java.awt.Dimension(2055, 1138));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Chef Inventory ");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Amount");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Search Name: ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 440, -1, -1));

        textfield_name.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        textfield_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfield_nameActionPerformed(evt);
            }
        });
        jPanel2.add(textfield_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 737, -1));

        textfield_amount.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jPanel2.add(textfield_amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 270, 737, -1));

        update.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        update.setText("Extract");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel2.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 190, 174, -1));

        textfieldSearch.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        textfieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldSearchActionPerformed(evt);
            }
        });
        textfieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textfieldSearchKeyReleased(evt);
            }
        });
        jPanel2.add(textfieldSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 608, -1));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Amount", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 530, 1373, 240));

        chef_interface.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        chef_interface.setText("Back to Chef Interface");
        chef_interface.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chef_interfaceMouseClicked(evt);
            }
        });
        jPanel2.add(chef_interface, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 790, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Name");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, -1));

        clear.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel2.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 270, 174, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/new bg.jpg"))); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        textfield_id.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jPanel2.add(textfield_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 188, 737, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chef_interfaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chef_interfaceMouseClicked
        // TODO add your handling code here:
        Chef_interface ci = new Chef_interface();
        ci.setVisible(true);
        dispose();
    }//GEN-LAST:event_chef_interfaceMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int ind = jTable1.getSelectedRow();
        showItemToFields(ind);
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        if ((textfield_id.getText() != null && textfield_name != null) && textfield_amount != null) {
            
            Connection conn = OracleConnection();
            
            try {
                callstate = conn.prepareCall("{call updateChefInventory(?,?,?)}");
                callstate.registerOutParameter(3, Types.VARCHAR);

                int newAmount = Integer.parseInt(textfield_amount.getText());
                int newId = Integer.parseInt(textfield_id.getText());

                callstate.setInt(1,newId);
                callstate.setInt(2,newAmount);

                callstate.execute();

                String finalResult= callstate.getString(3).toString();
                JOptionPane.showMessageDialog(null, finalResult);

                fillTable();
                
                conn.close();
                callstate.close();

            } 
            catch (HeadlessException | NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
                
            textfield_id.setText("");
            textfield_name.setText("");
            textfield_amount.setText("");
            
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select an item");
        }

    }//GEN-LAST:event_updateActionPerformed

    private void textfieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldSearchKeyReleased

        ArrayList<InventoryBean> al = null;
        al = new ArrayList<>();
        String val = textfieldSearch.getText();
        try {
            Connection conn = OracleConnection();

            String qry = "select * from inventory where name like '%" + val + "%'";
            PreparedStatement ps = conn.prepareStatement(qry);
            ResultSet rs = ps.executeQuery();
            
            InventoryBean inventory;
            while (rs.next()) {
                inventory = new InventoryBean(rs.getInt(1), rs.getString("name"), rs.getInt(3), rs.getInt(4));
                al.add(inventory);
            }

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Empty/clear the table
            Object[] row = new Object[4];
            for (int i = 0; i < al.size(); i++) {
                row[0] = al.get(i).getId();
                row[1] = al.get(i).getName();
                row[2] = al.get(i).getAmount();
                row[3] = al.get(i).getPrice();
                model.addRow(row);
            }
            
            conn.close();
            ps.close();
            rs.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_textfieldSearchKeyReleased

    private void textfieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldSearchActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed

        textfield_id.setText("");
        textfield_name.setText("");
        textfield_amount.setText("");

    }//GEN-LAST:event_clearActionPerformed

    private void textfield_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfield_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfield_nameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chef_inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chef_inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chef_inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chef_inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chef_inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chef_interface;
    private javax.swing.JButton clear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField textfieldSearch;
    private javax.swing.JTextField textfield_amount;
    private javax.swing.JTextField textfield_id;
    private javax.swing.JTextField textfield_name;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
